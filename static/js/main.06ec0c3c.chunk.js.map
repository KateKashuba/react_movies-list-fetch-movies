{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","request","title","fetch","then","response","ok","Error","status","statusText","json","getMovie","a","Response","FindMovie","onAddMovie","useState","setTitle","setMovie","error","setError","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","result","catch","message","App","setMovies","every","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06ec0c3c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=c20acc57&';\n\nconst request = (title: string) => {\n  return fetch(`${API_URL}${title}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getMovie = async (title: string) => {\n  const movie = await request(`t=${title}`);\n\n  if (movie.Response === 'False') {\n    throw new Error(\"Can't find a movie with such a title\");\n  }\n\n  return movie;\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  const onFindMovie = () => {\n    getMovie(title)\n      .then(result => setMovie(result))\n      .catch((result) => setError(result.message));\n  };\n\n  const Submit: React.FormEventHandler = (event) => {\n    event.preventDefault();\n\n    if (movie) {\n      onAddMovie(movie);\n      setTitle('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={Submit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input\"\n                value={title}\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                  setError(null);\n                }}\n              />\n            </div>\n          </label>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard movie={movie} />\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC<{}> = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie): void => {\n    const foundMovie = movies.every(({ imdbID }) => movie.imdbID !== imdbID);\n\n    if (foundMovie) {\n      setMovies(current => [...current, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          onAddMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}